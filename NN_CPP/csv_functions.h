//
// Created by Frans on 09/02/23.
//

#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <istream>
#include <iostream>
using namespace std;

#ifndef NN_CPP_PARSE_CSV_H
#define NN_CPP_PARSE_CSV_H

// ██████╗██╗  ██╗███████╗ ██████╗██╗  ██╗    ██╗      ██████╗  █████╗ ██████╗
//██╔════╝██║  ██║██╔════╝██╔════╝██║ ██╔╝    ██║     ██╔═══██╗██╔══██╗██╔══██╗
//██║     ███████║█████╗  ██║     █████╔╝     ██║     ██║   ██║███████║██║  ██║
//██║     ██╔══██║██╔══╝  ██║     ██╔═██╗     ██║     ██║   ██║██╔══██║██║  ██║
//╚██████╗██║  ██║███████╗╚██████╗██║  ██╗    ███████╗╚██████╔╝██║  ██║██████╔╝
// ╚═════╝╚═╝  ╚═╝╚══════╝ ╚═════╝╚═╝  ╚═╝    ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝


int check_load(const string &fileName){
    ifstream file(fileName);
    if (!file.good()){
        cerr << "Cannot open file" << endl;
        return 1;
    } else
        file.clear();                               // clear fail and eof bits
        file.seekg(0, std::ios::beg);   // back to the start
        return 0;
}

//██████╗  █████╗ ██████╗ ███████╗███████╗     ██████╗███████╗██╗   ██╗    ███████╗██╗██╗     ███████╗
//██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔════╝    ██╔════╝██╔════╝██║   ██║    ██╔════╝██║██║     ██╔════╝
//██████╔╝███████║██████╔╝███████╗█████╗      ██║     ███████╗██║   ██║    █████╗  ██║██║     █████╗
//██╔═══╝ ██╔══██║██╔══██╗╚════██║██╔══╝      ██║     ╚════██║╚██╗ ██╔╝    ██╔══╝  ██║██║     ██╔══╝
//██║     ██║  ██║██║  ██║███████║███████╗    ╚██████╗███████║ ╚████╔╝     ██║     ██║███████╗███████╗
//╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝     ╚═════╝╚══════╝  ╚═══╝      ╚═╝     ╚═╝╚══════╝╚══════╝

void parseCSV(const string &fileName, double** &data, int &rows, int &columns) {
    string line, cell;
    ifstream file(fileName);
    int count = 0;

    while (getline(file, line)) {
        ++count;
    }

    file.clear();
    file.seekg(0, ios::beg);

    rows = count;
    data = new double*[count];

    count = 0;
    while (getline(file, line)) {
        stringstream lineStream(line);
        int col = 0;
        while (getline(lineStream, cell, ',')) {
            ++col;
        }

        if (count == 0) {
            columns = col;
        }

        data[count] = new double[col];

        lineStream.clear();
        lineStream.str(line);
        col = 0;
        while (getline(lineStream, cell, ',')) {
            data[count][col] = stod(cell);
            ++col;
        }

        ++count;
    }
}

//██████╗ ██████╗ ██╗███╗   ██╗████████╗   ████████╗ ██████╗      ██████╗ ██████╗ ██╗   ██╗████████╗
//██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝   ╚══██╔══╝██╔═══██╗    ██╔════╝██╔═══██╗██║   ██║╚══██╔══╝
//██████╔╝██████╔╝██║██╔██╗ ██║   ██║         ██║   ██║   ██║    ██║     ██║   ██║██║   ██║   ██║
//██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║         ██║   ██║   ██║    ██║     ██║   ██║██║   ██║   ██║
//██║     ██║  ██║██║██║ ╚████║   ██║         ██║   ╚██████╔╝    ╚██████╗╚██████╔╝╚██████╔╝   ██║
//╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝         ╚═╝    ╚═════╝      ╚═════╝ ╚═════╝  ╚═════╝    ╚═╝

void print_data(const int rows , const int columns , double** data){
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < columns; ++j) {
            cout << data[i][j] << " ";
        }
        cout << endl;
    }
}

//███████╗██╗   ██╗███╗   ███╗███╗   ███╗ █████╗ ██████╗ ██╗███████╗███████╗    ██████╗  █████╗ ████████╗ █████╗
//██╔════╝██║   ██║████╗ ████║████╗ ████║██╔══██╗██╔══██╗██║██╔════╝██╔════╝    ██╔══██╗██╔══██╗╚══██╔══╝██╔══██╗
//███████╗██║   ██║██╔████╔██║██╔████╔██║███████║██████╔╝██║███████╗█████╗      ██║  ██║███████║   ██║   ███████║
//╚════██║██║   ██║██║╚██╔╝██║██║╚██╔╝██║██╔══██║██╔══██╗██║╚════██║██╔══╝      ██║  ██║██╔══██║   ██║   ██╔══██║
//███████║╚██████╔╝██║ ╚═╝ ██║██║ ╚═╝ ██║██║  ██║██║  ██║██║███████║███████╗    ██████╔╝██║  ██║   ██║   ██║  ██║
//╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚══════╝╚══════╝    ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝

void summary(const int rows , const int columns , const std::string& input){
    cout << "The " << input << " csv file has:"  << endl;
    cout << rows << " rows"  << endl;
    cout << columns << " columns" << endl;
    cout << endl;
}

//███╗   ███╗ █████╗ ██╗  ██╗███████╗     ██████╗███████╗██╗   ██╗
//████╗ ████║██╔══██╗██║ ██╔╝██╔════╝    ██╔════╝██╔════╝██║   ██║
//██╔████╔██║███████║█████╔╝ █████╗      ██║     ███████╗██║   ██║
//██║╚██╔╝██║██╔══██║██╔═██╗ ██╔══╝      ██║     ╚════██║╚██╗ ██╔╝
//██║ ╚═╝ ██║██║  ██║██║  ██╗███████╗    ╚██████╗███████║ ╚████╔╝
//╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝     ╚═════╝╚══════╝  ╚═══╝

void make_csv(int Nrows , double data[Nrows] , const string& file_name){
    ofstream out(file_name);
    for (int i=0 ; i<Nrows ; ++i) {
        out << data[i] << ',';
        out << ' ';
    }
}

// ██████╗██╗     ███████╗ █████╗ ███╗   ██╗    ███╗   ███╗███████╗███╗   ███╗ ██████╗ ██████╗ ██╗   ██╗
//██╔════╝██║     ██╔════╝██╔══██╗████╗  ██║    ████╗ ████║██╔════╝████╗ ████║██╔═══██╗██╔══██╗╚██╗ ██╔╝
//██║     ██║     █████╗  ███████║██╔██╗ ██║    ██╔████╔██║█████╗  ██╔████╔██║██║   ██║██████╔╝ ╚████╔╝
//██║     ██║     ██╔══╝  ██╔══██║██║╚██╗██║    ██║╚██╔╝██║██╔══╝  ██║╚██╔╝██║██║   ██║██╔══██╗  ╚██╔╝
//╚██████╗███████╗███████╗██║  ██║██║ ╚████║    ██║ ╚═╝ ██║███████╗██║ ╚═╝ ██║╚██████╔╝██║  ██║   ██║
// ╚═════╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝    ╚═╝     ╚═╝╚══════╝╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝

void clean_memory(const int rows , double** data){
    for (int i = 0; i < rows; ++i) {
        delete[] data[i];
    }
    delete[] data;
}

#endif //NN_CPP_PARSE_CSV_H
